name: auto-release

on:
  push:
    branches:
      - master

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get package version
        id: package_version
        run: echo "VERSION=$(jq -r .version package.json)" >> $GITHUB_ENV

      - name: Check if tag exists
        id: check_tag
        run: |
          if git ls-remote --tags origin | grep -q "refs/tags/v$VERSION"; then
            echo "TAG_EXISTS=true" >> $GITHUB_ENV
          else
            echo "TAG_EXISTS=false" >> $GITHUB_ENV
          fi

      - name: Exit if tag exists
        if: env.TAG_EXISTS == 'true'
        run: echo "Tag already exists. Skipping build and release." && exit 0

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: "latest"

      - name: Install dependencies
        run: bun install

      - name: Build
        run: |
          bun builder
          bun lint:fix

      - name: Compress built files
        run: |
          tar -czvf emails.tar.gz dist/emails.ts
          zip -r emails.zip dist/emails.ts

      - name: Create GitHub Release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git tag "v$VERSION"
          git push origin "v$VERSION"
          gh release create "v$VERSION" --title "v$VERSION" --notes "Auto-generated release" emails.tar.gz emails.zip
